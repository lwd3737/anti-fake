export const PROMPTS = {
	// 	old_formatSubtitle: `유튜브 자막 텍스트를 문장 단위로 나누고, 각 문장에 순서대로 번호를 매기고 오타도 수정해주세요.

	// # Steps
	// 1. 입력 텍스트를 받아서 내용이 문장 단위로 구분되지 않은 부분을 찾아 나눕니다.
	// 2. 문장의 끝을 의미하는 구두점(예: '.', '!', '?')을 기준으로 문장을 적절하게 나눕니다.
	// 3. 문법 및 오타 수정 작업을 수행하여 자연스러운 문장을 만듭니다.
	// 4. 각 문장에 일련번호를 순서대로 매깁니다.
	// 5. 번호와 문장을 출력 형식에 맞춰 정리합니다.

	// # Output Format
	// - 번호와 해당 문장을 각각 줄바꿈해서 출력합니다.
	// - 예시 출력 형태:
	//   1. 첫 번째 문장입니다.
	//   2. 두 번째 문장입니다.
	//   3. 세 번째 문장입니다.

	// # Examples
	// **Input:**
	// "안녕하세요 저는 GPT 모델입니다 오늘은 날씨가 참 좋네요 새로운 기술들이 세상을 바꾸고 있습니다."

	// **Output:**
	// 1. 안녕하세요, 저는 GPT 모델입니다.
	// 2. 오늘은 날씨가 참 좋네요.
	// 3. 새로운 기술들이 세상을 바꾸고 있습니다.

	// # Notes
	// - 문장을 정확히 나누기 위해 공통적인 끝맺음 구두점을 주의 깊게 사용하세요.
	// - 줄 바꿈 후 가독성을 위해 번호와 문장 사이에 공백을 유지하세요.
	// - 오타를 발견하면 적절히 수정하여 매끄러운 문장을 만드세요.
	// `,
	formatSubtitle: `YouTube 자막을 (형식 input:{자막}) 받아서 개별 문장으로 나누십시오. 또한 자막 텍스트에 있는 오타를 수정하십시오. 수정된 각 문장은 배열의 요소로 형식화해야 합니다.

# 단계

1. **input:{자막}** 형식으로 제공된 입력 문자열에서 자막을 추출하십시오.
2. 자막 텍스트에 있는 철자를 교정하십시오.
3. 교정된 자막 텍스트를 개별 문장으로 나누십시오.
4. 빈 문자열이나 불필요한 공백을 제거하십시오.
5. 교정된 각 문장을 배열의 개별 요소로 표현하십시오.

# 출력 형식

- 각 요소가 수정된 문장 문자열인 JSON 배열
- 출력 예시: ["수정된 첫 번째 문장.", "수정된 두 번째 문장.", "수정된 세 번째 문장."]

# 예시

**입력:**
input:안녕하세요욤. 그간 잘 지내셨나요오? 오늘 정말 날씨가 좋습니다아!

**출력:**
["안녕하세요.", "그간 잘 지내셨나요?", "오늘 정말 날씨가 좋습니다."]`,

	// 	detectClaim: `다음 텍스트에서 검증 가능한 주장들을 식별하고 각 진술을 추출하세요. 각 주장은 일반 지식이나 공개된 출처를 통해 검증 가능해야 합니다.

	// # Example

	// **Input Text:**
	// "서울은 대한민국의 수도이며, 약 1,000만 명의 인구를 가지고 있습니다. 많은 사람들은 서울의 교통 혼잡이 심각하다고 생각합니다. 2020년 서울의 평균 기온은 섭씨 12.5도였습니다."

	// **Output:**
	// [
	//   "서울은 대한민국의 수도입니다.",
	//   "서울의 인구는 약 1,000만 명입니다.",
	//   "2020년 서울의 평균 기온은 섭씨 12.5도였습니다."
	// ]`,
	detectClaims: `유튜브 자막에서 검증 가능한 주장을 식별하고 추출하시오. 검증 가능한 주장만 포함하며 지나치게 일반적이거나 추상적인 주장은 제외하십시오.

추출한 주장은 객체 타입({ number: number, reason: string })으로 표현합니다. number는 input으로 들어온 진술(문장)의 번호이며, reason은 결과에 포함된 이유에 대한 설명입니다.

# Steps
1. 각 문장을 순차적으로 검토하고 다음 기준에 따라 검증할 가치가 있는 주장인지 평가하십시오.
   - 명확하게 사실을 진술하거나 구체적인 정보를 제공하는 경우.
   - 일부 주관적인 의견을 포함하지만 맥락상 검증 가능하고 중요한 경우.
   - 지나치게 일반적이거나 추상적인 주장은 제외하십시오.
2. 검증된 주장을 추출하여 배열의 요소로 추가하십시오.

# Output Format
- 배열 형식
- 출력 예시: 
[
   { "number": 1, "reason": "AI가 교육 분야를 변화시키고 있다는 것은 현재 교육 시스템에 대한 기술적 영향을 명시적으로 진술하고 있다." },
   { "number": 2, "reason": "새로운 안전 규정의 도입 시기는 명확한 시간 정보를 제공하여 검증 가능하다." },
   { "number": 3, "reason": "경제 제재의 부과는 구체적인 경제적 조치에 대한 진술로, 사실 여부를 확인할 수 있다." }
]

# Examples
**Input:**
1. AI의 효율성에 대한 논의는 끝나지 않았다.
2. 혁신적인 AI 제품의 출시가 연기되었다.
3. 많은 전문가들은 AI가 경제에 긍정적인 영향을 미칠 수 있다고 기대하고 있다.
4. 겨울철 추운 날씨 때문에 전기 사용이 급증하고 있다.

**Output:**
[
    { "number": 2, "reason": "AI 제품 출시의 연기 사실은 명확하며 실제로 발생한 사건을 기반으로 하여 검증이 가능하다." },
    { "number": 3, "reason": "전문가들의 주장은 AI가 경제에 긍정적인 영향을 미칠 가능성에 대한 내용을 포함하고 있어 맥락상 검증 가능하다." },
    { "number": 4, "reason": "전기 사용량의 급증은 겨울철 날씨와 연관되어 명확한 데이터를 통해 확인할 수 있다." }
]

# Notes
- 각 문장의 의미를 신중하게 해석하여 검증할 가치가 있는 주장을 정확하게 식별하십시오.
- 주관적인 의견도 맥락상 검증 가능하고 중요한 경우 포함하십시오.
- 검증할 수 없는 지나치게 일반적이거나 추상적인 주장은 제외하십시오.
- **알림:** 예제의 input과 output에서 제외된 문장을 명확하게 구분하며, 실제 출력에서는 제외된 문장은 표시하지 않습니다.`,
};
