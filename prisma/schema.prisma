generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  provider     OauthProviderType
  providerSub  String?
  email        String            @unique
  role         UserRole          @default(USER)
  refreshToken String?
  createdAt    DateTime          @default(now())

  factCheckSessions FactCheckSession[]

  @@unique([provider, providerSub])
}

enum OauthProviderType {
  GOOGLE
}

enum UserRole {
  USER
  ADMIN

  @@map("Role")
}

model YoutubeVideo {
  id                String   @id // youtube video id
  title             String
  channelId         String   @unique
  channelTitle      String
  thumbnailUrl      String
  transcript        String?
  transcriptSummary String?
  duration          Int?
  publishedAt       DateTime
  updatedAt         DateTime @updatedAt
}

enum ContentType {
  YOUTUBE_VIDEO
}

model FactCheckSession {
  id          String      @id @default(uuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  contentType ContentType
  contentId   String

  claimVerifications ClaimVerification[]
  claims             Claim[]
  createdAt          DateTime            @default(now())

  @@unique([contentType, contentId])
}

model Claim {
  id                 String           @id @default(uuid())
  factCheckSessionId String
  faactCheckSession  FactCheckSession @relation(fields: [factCheckSessionId], references: [id], onDelete: Cascade)
  index              Int
  content            String
  detectionReason    String
  metadata           Json?
  createdAt          DateTime         @default(now())

  claimVerifications ClaimVerification[]
}

model ClaimVerification {
  id                 String           @id @default(uuid())
  factCheckSessionId String
  factCheckSession   FactCheckSession @relation(fields: [factCheckSessionId], references: [id], onDelete: Cascade)
  claimId            String
  claim              Claim            @relation(fields: [claimId], references: [id])
  verdict            VerdictType
  verdictReason      String
  evidences          Json
  createdAt          DateTime         @default(now())
}

enum VerdictType {
  TRUE
  MOSTLY_TRUE
  MIXED
  MOSTLY_FALSE
  FALSE
  UNKNOWN
}
